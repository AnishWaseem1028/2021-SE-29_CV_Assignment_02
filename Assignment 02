import cv2
import numpy as np
from matplotlib import pyplot as plt
import requests
from io import BytesIO
from PIL import Image

# Specify the image URL (replace with your desired image URL)
image_url = "https://images.pexels.com/photos/825947/pexels-photo-825947.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1"  # Replace with the image URL

# Download the image
response = requests.get(image_url)
if response.status_code == 200:
    # Convert the image to a format usable by OpenCV
    image_data = BytesIO(response.content)
    pil_image = Image.open(image_data)
    image = cv2.cvtColor(np.array(pil_image), cv2.COLOR_RGB2BGR)
    
    # Convert the image to grayscale
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Convert the image to float32, as required by the Harris algorithm
    gray_image_float = np.float32(gray_image)
    
    # Apply the Harris corner detector
    harris_response = cv2.cornerHarris(gray_image_float, blockSize=2, ksize=3, k=0.04)
    
    # Threshold the response to identify strong corners
    image[harris_response > 0.01 * harris_response.max()] = [0, 0, 255]  # Mark corners in red
    
    # Convert the image to RGB for Matplotlib display
    image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    
    # Display the result
    plt.figure(figsize=(10, 6))
    plt.title("Harris Corner Detection")
    plt.imshow(image_rgb)
    plt.axis("off")
    plt.show()
else:
    print("Error: Unable to download the image. Please check the URL.")
